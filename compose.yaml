name: pipeline-as-art

services:
  gateway:
    image: caddy:2
    container_name: paa-gateway
    restart: unless-stopped
    ports:
      - "80:80"
    volumes:
      - ./gateway/Caddyfile:/etc/caddy/Caddyfile:ro
    depends_on:
      api:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "wget -qO- http://api:8000/healthz || exit 1"]
      interval: 10s
      timeout: 2s
      retries: 5

  api:
    build:
      context: ./api
    container_name: paa-api
    restart: unless-stopped
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - REDIS_URL=${REDIS_URL}
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/healthz"]
      interval: 10s
      timeout: 2s
      retries: 3

  db:
    image: postgres:16
    container_name: paa-db
    restart: unless-stopped
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - db-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
      interval: 5s
      timeout: 3s
      retries: 10

  redis:
    image: redis:7
    container_name: paa-redis
    restart: unless-stopped
    command: ["redis-server", "--appendonly", "yes"]
    volumes:
      - redis-data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "PING"]
      interval: 5s
      timeout: 2s
      retries: 10

volumes:
  db-data:
  redis-data:
